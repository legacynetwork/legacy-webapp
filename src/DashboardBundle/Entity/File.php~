<?php

namespace DashboardBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * File
 *
 * @ORM\Table(name="file")
 * @ORM\Entity(repositoryClass="DashboardBundle\Repository\FileRepository")
 */
class File
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    
    
    public function __construct()
    {
    	$this->dateUpload = new \Datetime();
    }
    
   
    
    /**
     * @var \DateTime
     *
     * @ORM\Column(name="dateUpload", type="datetime")
     */
    private $dateUpload;
    
    
    /**
     * @var string
     *
     * @ORM\Column(name="title", type="text")
     */
    private $title;
    
    /**
     * @var string
     *
     * @ORM\Column(name="extension", type="text", nullable=true)
     */
    private $extension;
    
    

    /**
     * @ORM\ManyToMany(targetEntity="DashboardBundle\Entity\Capsule", mappedBy="files")
     * @ORM\JoinColumn(nullable=true)
     */
    private $capsules;
    
    
    /**
     * @ORM\ManyToOne(targetEntity="UserBundle\Entity\User", inversedBy="files")
     * @ORM\JoinColumn(nullable=false)
     */
    private $user;
    

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }
    
    
    

    public function getAbsolutePath() {
    	return $this->getUploadRootDir().'/'.$this->id.".".$this->extension;
    }
    
    
    public function upload($file)
    {
    	// Si jamais il n'y a pas de fichier (champ facultatif)
    	if (null === $file) {
    		return;
    	}
    
    
    	// Si on avait un ancien fichier, on le supprime
    	if (null !== $this->extension) {
    		$oldFile = $this->getUploadRootDir().'/'.$this->id.'.'.$this->extension;
    		if (file_exists($oldFile)) {
    			unlink($oldFile);
    		}
    	}
    
    	$this->extension = $file->guessExtension();
    
    	// On déplace le fichier envoyé dans le répertoire de notre choix
    	$file->move(
    			$this->getUploadRootDir(), // Le répertoire de destination
    			$this->id.'.'.$this->extension   // Le nom du fichier à créer, ici « id.extension »
    	);
    }
    
    
    
    public function getUploadDir()
    {
    	// On retourne le chemin relatif vers l'image pour un navigateur
    	return 'files';
    }
    
    
    public function getUploadRootDir()
    {
    	// On retourne le chemin relatif vers l'image pour notre code PHP
    	return __DIR__.'/../../../../userFiles/'.$this->user->getId().'/'.$this->getUploadDir();
    }
    
    
    
    
    
}
